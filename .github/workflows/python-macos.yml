name: Python tests using allure example.

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      - name: 🐍 Step 1 - Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: 3.10
      - name: 🔗 Step 2 - Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt
          pipenv install --deploy --system
          brew update
          brew install allure
      - name: 📂 Step 3 - Create a temp artifact folder named `output`
        run: |
          mkdir output
      - name: ❄️ Step 4 - Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: 🧪 Step 5 - Run Behave with Allure folder inside `output` folder + PyTest
        run: |
          export TRELLO_APIKEY=${{secrets.TRELLO_APIKEY}}
          export TRELLO_TOKEN=${{secrets.TRELLO_TOKEN}}
          behave -f allure_behave.formatter:AllureFormatter -o output ./tests/api/features
          pytest
      - name: 📊 Step 6 - Collect Allure files and generate allure-report folder
        run: |
          allure generate output/
      - name: 🎁 Step 7 - Publishing Allure artifact to GitHub Actions
        uses: actions/upload-artifact@v2
        with:
          name: allure-report
          path: allure-report
